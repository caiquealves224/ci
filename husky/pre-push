#!/bin/sh

REPO_ROOT=$(git rev-parse --show-toplevel)
ENV_EXAMPLE_PATH="$REPO_ROOT/.env.example"

# A single file to store hashes for .env.example
HASH_FILE="$REPO_ROOT/.husky/_/.env_hashes"

### Function to get SHA256 hash of a file from HEAD commit
get_head_hash() {
  local FILE_PATH_RELATIVE=$(realpath --relative-to="$REPO_ROOT" "$1")
  if git ls-tree --name-only HEAD | grep -q "^$FILE_PATH_RELATIVE$"; then
    git show HEAD:"$FILE_PATH_RELATIVE" | sha256sum | awk '{ print $1 }'
  else
    echo "" # File does not exist in HEAD
  fi
}

# Get current hash for .env.example from HEAD commit
CURRENT_ENV_EXAMPLE_HASH=$(get_head_hash "$ENV_EXAMPLE_PATH")

# Read previous hashes
if [ -f "$HASH_FILE" ]; then
  PREV_ENV_EXAMPLE_HASH=$(grep "env_example_hash" "$HASH_FILE" | awk '{print $2}' 2>/dev/null)
else
  PREV_ENV_EXAMPLE_HASH=""
fi

if [ "$CURRENT_ENV_EXAMPLE_HASH" = "$PREV_ENV_EXAMPLE_HASH" ]; then
  exit 0
fi

echo "Mudança detectada em .env.example"

# Overwrite the hash file with the new hashes for both files
echo "env_example_hash $CURRENT_ENV_EXAMPLE_HASH" > "$HASH_FILE"

### Execute the TypeScript validation script
SCRIPT="$REPO_ROOT/.husky/scripts/notify-env.ts"

if [ -f "$SCRIPT" ]; then
  npx ts-node "$SCRIPT"
  STATUS=$?
  if [ $STATUS -ne 0 ]; then
    echo "❌ Push bloqueado por problemas nas variáveis de ambiente detectados pelo script de validação."
    exit 1
  fi
else
  echo "⚠️  Script de validação ($SCRIPT) não encontrado. Push permitido."
fi

# If we reached here, no issues were found, so allow the push.
exit 0
